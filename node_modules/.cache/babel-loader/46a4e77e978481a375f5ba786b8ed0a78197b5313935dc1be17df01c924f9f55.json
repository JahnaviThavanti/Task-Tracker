{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\GitHubRepos\\\\CourseDevelopment\\\\OCUFrontendWebDev\\\\completed apps\\\\fall24block2\\\\task-tracker\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { ROLES } from '../types';\nimport { authService } from '../services/authService';\n\n/**\r\n * Context for managing authentication state globally.\r\n * Provides user information and auth functions to all child components.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\n\n/**\r\n * Provider component that wraps the app and makes auth available to all child components.\r\n * Manages user authentication state and provides login/logout functionality.\r\n * \r\n * @param {Object} props - Component props\r\n * @param {ReactNode} props.children - Child components to render\r\n */\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  // Track the authenticated user\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for existing user session on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const user = await authService.getCurrentUser();\n        if (user) setUser(user);\n      } catch (err) {\n        console.error('Auth initialization error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  /**\r\n   * Handles user login.\r\n   * In a real app, this would verify credentials against a backend.\r\n   * \r\n   * @param {string} email - User's email\r\n   * @param {string} password - User's password\r\n   */\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const user = await authService.login(email, password);\n      setUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n    } catch (err) {\n      setError('Invalid email or password');\n      throw err;\n    }\n  };\n\n  /**\r\n   * Handles user logout.\r\n   * Clears user data from state and localStorage.\r\n   */\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      error,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n/**\r\n * Custom hook to use authentication context.\r\n * Provides a convenient way to access auth functionality in any component.\r\n * \r\n * @returns {Object} Auth context value containing user data and auth functions\r\n * @throws {Error} If used outside of AuthProvider\r\n */\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","ROLES","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","initAuth","getCurrentUser","err","console","login","email","password","localStorage","setItem","JSON","stringify","logout","removeItem","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","isAuthenticated","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["A:/Projects/GitHubRepos/CourseDevelopment/OCUFrontendWebDev/completed apps/fall24block2/task-tracker/src/contexts/authContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from 'react';\r\nimport { ROLES } from '../types';\r\nimport { authService } from '../services/authService';\r\n\r\n/**\r\n * Context for managing authentication state globally.\r\n * Provides user information and auth functions to all child components.\r\n */\r\nexport const AuthContext = createContext(null);\r\n\r\n/**\r\n * Provider component that wraps the app and makes auth available to all child components.\r\n * Manages user authentication state and provides login/logout functionality.\r\n * \r\n * @param {Object} props - Component props\r\n * @param {ReactNode} props.children - Child components to render\r\n */\r\nexport function AuthProvider({ children }) {\r\n  // Track the authenticated user\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check for existing user session on mount\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        const user = await authService.getCurrentUser();\r\n        if (user) setUser(user);\r\n      } catch (err) {\r\n        console.error('Auth initialization error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    initAuth();\r\n  }, []);\r\n  /**\r\n   * Handles user login.\r\n   * In a real app, this would verify credentials against a backend.\r\n   * \r\n   * @param {string} email - User's email\r\n   * @param {string} password - User's password\r\n   */\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const user = await authService.login(email, password);\r\n      setUser(user);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } catch (err) {\r\n      setError('Invalid email or password');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles user logout.\r\n   * Clears user data from state and localStorage.\r\n   */\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center min-h-screen\">\r\n      <p>Loading...</p>\r\n    </div>;\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n          user, \r\n          login, \r\n          logout, \r\n          error,\r\n          isAuthenticated: !!user \r\n        }}>\r\n  {children}\r\n</AuthContext.Provider>\r\n  );\r\n}\r\n\r\n/**\r\n * Custom hook to use authentication context.\r\n * Provides a convenient way to access auth functionality in any component.\r\n * \r\n * @returns {Object} Auth context value containing user data and auth functions\r\n * @throws {Error} If used outside of AuthProvider\r\n */\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}