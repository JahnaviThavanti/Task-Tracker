{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\FrontEnd\\\\React Apps\\\\task-tracker\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// components/Login.js\nimport { useState } from 'react';\nimport { Card, CardHeader, CardContent } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { useAuth } from '../contexts/authContext';\n\n/**\n * Login component that handles user authentication.\n * Provides a form for users to enter credentials and handles the login process.\n * Uses the AuthContext to manage authentication state.\n * \n * Features:\n * - Email and password validation\n * - Error handling and display\n * - Controlled form inputs\n * - Integration with authentication context\n * \n * @component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  // State for form inputs\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // State for handling login errors\n  const [error, setError] = useState('');\n\n  // Get login function from auth context\n  const {\n    login\n  } = useAuth();\n\n  /**\n   * Handles form submission for login.\n   * Validates inputs and attempts to log in the user.\n   * \n   * @param {Event} e - Form submission event\n   */\n  const handleSubmit = e => {\n    e.preventDefault();\n    try {\n      // Basic validation\n      if (!email || !password) {\n        setError('Please enter both email and password');\n        return;\n      }\n\n      // Email format validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        setError('Please enter a valid email address');\n        return;\n      }\n\n      // Attempt login\n      login(email, password);\n\n      // Clear any existing errors on successful login\n      setError('');\n    } catch (err) {\n      // Handle login errors\n      setError('Invalid credentials. Please try again.');\n      console.error('Login error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"w-full max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-sm font-medium\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            className: \"mt-1\",\n            required: true\n            // Add aria-label for accessibility\n            ,\n            \"aria-label\": \"Email address\"\n            // Add aria-invalid when there's an error\n            ,\n            \"aria-invalid\": error ? 'true' : 'false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block text-sm font-medium\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            className: \"mt-1\",\n            required: true\n            // Add aria-label for accessibility\n            ,\n            \"aria-label\": \"Password\"\n            // Add aria-invalid when there's an error\n            ,\n            \"aria-invalid\": error ? 'true' : 'false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"destructive\"\n          // Add role=\"alert\" for accessibility\n          ,\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"w-full\"\n          // Disable button while logging in (could add loading state)\n          // disabled={isLoading}\n          ,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Additional component features that could be added:\n * \n * 1. Loading state during login attempt\n * 2. Remember me checkbox\n * 3. Forgot password link\n * 4. Sign up link for new users\n * 5. OAuth integration for social login\n * 6. Password visibility toggle\n * 7. Rate limiting for failed attempts\n * 8. Auto-focus on email input on mount\n * 9. Form persistence between renders\n * 10. Password strength requirements\n */\n_s(Login, \"4RLANKyFo/Om4cnGrk9tE+D77YQ=\", false, function () {\n  return [useAuth];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Card","CardHeader","CardContent","Button","Input","Alert","AlertDescription","useAuth","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","login","handleSubmit","e","preventDefault","emailRegex","test","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","required","variant","role","_c","$RefreshReg$"],"sources":["A:/Projects/FrontEnd/React Apps/task-tracker/src/components/Login.js"],"sourcesContent":["// components/Login.js\nimport { useState } from 'react';\nimport { Card, CardHeader, CardContent } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { useAuth } from '../contexts/authContext';\n\n\n/**\n * Login component that handles user authentication.\n * Provides a form for users to enter credentials and handles the login process.\n * Uses the AuthContext to manage authentication state.\n * \n * Features:\n * - Email and password validation\n * - Error handling and display\n * - Controlled form inputs\n * - Integration with authentication context\n * \n * @component\n */\nexport function Login() {\n  // State for form inputs\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  \n  // State for handling login errors\n  const [error, setError] = useState('');\n  \n  // Get login function from auth context\n  const { login } = useAuth();\n\n  /**\n   * Handles form submission for login.\n   * Validates inputs and attempts to log in the user.\n   * \n   * @param {Event} e - Form submission event\n   */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    try {\n      // Basic validation\n      if (!email || !password) {\n        setError('Please enter both email and password');\n        return;\n      }\n\n      // Email format validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        setError('Please enter a valid email address');\n        return;\n      }\n\n      // Attempt login\n      login(email, password);\n      \n      // Clear any existing errors on successful login\n      setError('');\n    } catch (err) {\n      // Handle login errors\n      setError('Invalid credentials. Please try again.');\n      console.error('Login error:', err);\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-md mx-auto mt-8\">\n      <CardHeader>\n        <h2 className=\"text-2xl font-bold\">Login</h2>\n      </CardHeader>\n      \n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Email Input Group */}\n          <div>\n            <label \n              htmlFor=\"email\" \n              className=\"block text-sm font-medium\"\n            >\n              Email\n            </label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              className=\"mt-1\"\n              required\n              // Add aria-label for accessibility\n              aria-label=\"Email address\"\n              // Add aria-invalid when there's an error\n              aria-invalid={error ? 'true' : 'false'}\n            />\n          </div>\n\n          {/* Password Input Group */}\n          <div>\n            <label \n              htmlFor=\"password\" \n              className=\"block text-sm font-medium\"\n            >\n              Password\n            </label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              className=\"mt-1\"\n              required\n              // Add aria-label for accessibility\n              aria-label=\"Password\"\n              // Add aria-invalid when there's an error\n              aria-invalid={error ? 'true' : 'false'}\n            />\n          </div>\n\n          {/* Error Alert */}\n          {error && (\n            <Alert \n              variant=\"destructive\"\n              // Add role=\"alert\" for accessibility\n              role=\"alert\"\n            >\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n\n          {/* Submit Button */}\n          <Button \n            type=\"submit\" \n            className=\"w-full\"\n            // Disable button while logging in (could add loading state)\n            // disabled={isLoading}\n          >\n            Login\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n\n/**\n * Additional component features that could be added:\n * \n * 1. Loading state during login attempt\n * 2. Remember me checkbox\n * 3. Forgot password link\n * 4. Sign up link for new users\n * 5. OAuth integration for social login\n * 6. Password visibility toggle\n * 7. Rate limiting for failed attempts\n * 8. Auto-focus on email input on mount\n * 9. Form persistence between renders\n * 10. Password strength requirements\n */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}