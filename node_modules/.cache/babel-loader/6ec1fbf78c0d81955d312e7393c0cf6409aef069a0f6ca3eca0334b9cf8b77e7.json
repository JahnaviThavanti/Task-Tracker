{"ast":null,"code":"import { VISIBILITY_LEVELS } from '../types';\nconst BASE_URL = 'http://localhost:3001';\nexport const taskService = {\n  // Fetch all tasks for a specific user\n  async getUserTasks(userId) {\n    try {\n      // Get user's private tasks AND family tasks\n      const response = await fetch(`${BASE_URL}/tasks?userId=${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const tasks = await response.json();\n\n      // Fetch all family tasks\n      const familyResponse = await fetch(`${BASE_URL}/tasks?visibility=${VISIBILITY_LEVELS.FAMILY}`);\n      if (!familyResponse.ok) throw new Error('Failed to fetch family tasks');\n      const familyTasks = await familyResponse.json();\n\n      // Combine and deduplicate tasks\n      const allTasks = [...tasks, ...familyTasks];\n      const uniqueTasks = Array.from(new Map(allTasks.map(task => [task.id, task])).values());\n      return uniqueTasks;\n    } catch (error) {\n      console.error('Get tasks error:', error);\n      throw error;\n    }\n  },\n  // Create a new task\n  async createTask(taskData) {\n    try {\n      const response = await fetch(`${BASE_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...taskData,\n          id: Date.now().toString(),\n          createdAt: new Date().toISOString(),\n          visibility: taskData.visibility || VISIBILITY_LEVELS.PRIVATE\n        })\n      });\n      if (!response.ok) throw new Error('Failed to create task');\n      return await response.json();\n    } catch (error) {\n      console.error('Create task error:', error);\n      throw error;\n    }\n  },\n  // Update a task\n  async updateTask(taskId, updates) {\n    try {\n      const response = await fetch(`${BASE_URL}/tasks/${taskId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) throw new Error('Failed to update task');\n      return await response.json();\n    } catch (error) {\n      console.error('Update task error:', error);\n      throw error;\n    }\n  },\n  // Delete a task\n  async deleteTask(taskId) {\n    try {\n      const response = await fetch(`${BASE_URL}/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete task');\n      return true;\n    } catch (error) {\n      console.error('Delete task error:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["VISIBILITY_LEVELS","BASE_URL","taskService","getUserTasks","userId","response","fetch","method","headers","ok","Error","tasks","json","familyResponse","FAMILY","familyTasks","allTasks","uniqueTasks","Array","from","Map","map","task","id","values","error","console","createTask","taskData","body","JSON","stringify","Date","now","toString","createdAt","toISOString","visibility","PRIVATE","updateTask","taskId","updates","deleteTask"],"sources":["A:/Projects/GitHubRepos/CourseDevelopment/OCUFrontendWebDev/completed apps/fall24block2/task-tracker/src/services/taskService.js"],"sourcesContent":["import { VISIBILITY_LEVELS } from '../types';\n\nconst BASE_URL = 'http://localhost:3001';\n\nexport const taskService = {\n  // Fetch all tasks for a specific user\n  async getUserTasks(userId) {\n    try {\n      // Get user's private tasks AND family tasks\n      const response = await fetch(`${BASE_URL}/tasks?userId=${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const tasks = await response.json();\n\n      // Fetch all family tasks\n      const familyResponse = await fetch(\n        `${BASE_URL}/tasks?visibility=${VISIBILITY_LEVELS.FAMILY}`\n      );\n      if (!familyResponse.ok) throw new Error('Failed to fetch family tasks');\n      const familyTasks = await familyResponse.json();\n      \n     // Combine and deduplicate tasks\n     const allTasks = [...tasks, ...familyTasks];\n     const uniqueTasks = Array.from(new Map(allTasks.map(task => [task.id, task])).values());      \n      \n      \n      return uniqueTasks;\n    } catch (error) {\n      console.error('Get tasks error:', error);\n      throw error;\n    }\n  },\n\n  // Create a new task\n  async createTask(taskData) {\n    try {\n      const response = await fetch(`${BASE_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...taskData,\n          id: Date.now().toString(),\n          createdAt: new Date().toISOString(),\n          visibility: taskData.visibility || VISIBILITY_LEVELS.PRIVATE\n        }),\n      });\n      if (!response.ok) throw new Error('Failed to create task');\n      return await response.json();\n    } catch (error) {\n      console.error('Create task error:', error);\n      throw error;\n    }\n  },\n\n  // Update a task\n  async updateTask(taskId, updates) {\n    try {\n      const response = await fetch(`${BASE_URL}/tasks/${taskId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      });\n      if (!response.ok) throw new Error('Failed to update task');\n      return await response.json();\n    } catch (error) {\n      console.error('Update task error:', error);\n      throw error;\n    }\n  },\n\n  // Delete a task\n  async deleteTask(taskId) {\n    try {\n      const response = await fetch(`${BASE_URL}/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete task');\n      return true;\n    } catch (error) {\n      console.error('Delete task error:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}