{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\FrontEnd\\\\React Apps\\\\task-tracker\\\\src\\\\components\\\\UserManagement.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/authContext';\nimport { authService } from '../services/authService';\nimport { Card, CardHeader, CardContent } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Alert, AlertDescription } from './ui/alert';\n\n/**\r\n * UserManagement Component\r\n * Provides interface for administrators to manage system users.\r\n * Includes functionality for creating, viewing, and deleting users.\r\n * Only accessible to users with admin role.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserManagement() {\n  _s();\n  // Get current user info from auth context for permission checking\n  const {\n    user: currentUser\n  } = useAuth();\n\n  // State management\n  const [users, setUsers] = useState([]); // List of all users\n  const [error, setError] = useState(null); // Error message handling\n\n  // Form state for new user creation\n  const [newUser, setNewUser] = useState({\n    email: '',\n    password: '',\n    name: '',\n    role: 'user' // Default role for new users\n  });\n\n  /**\r\n   * Load users when component mounts\r\n   * Uses useEffect to avoid multiple simultaneous data fetches\r\n   */\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  /**\r\n   * Fetches current list of users from the server\r\n   * Updates users state or sets error message if fetch fails\r\n   */\n  const loadUsers = async () => {\n    try {\n      const users = await authService.getAllUsers();\n      setUsers(users);\n    } catch (err) {\n      setError('Failed to load users');\n      console.error('Load users error:', err);\n    }\n  };\n\n  /**\r\n   * Handles new user creation form submission\r\n   * Validates input, creates user, and refreshes user list\r\n   * \r\n   * @param {Event} e - Form submission event\r\n   */\n  const handleCreateUser = async e => {\n    e.preventDefault();\n    try {\n      // Validate email format\n      if (!newUser.email.includes('@')) {\n        setError('Please enter a valid email address');\n        return;\n      }\n\n      // Validate password length\n      if (newUser.password.length < 6) {\n        setError('Password must be at least 6 characters long');\n        return;\n      }\n\n      // Create new user\n      await authService.createUser(newUser);\n\n      // Reset form to initial state\n      setNewUser({\n        email: '',\n        password: '',\n        name: '',\n        role: 'user'\n      });\n\n      // Refresh user list\n      loadUsers();\n\n      // Clear any existing errors\n      setError(null);\n    } catch (err) {\n      setError('Failed to create user');\n      console.error('Create user error:', err);\n    }\n  };\n\n  /**\r\n   * Handles user deletion\r\n   * Includes safety checks and confirmation\r\n   * \r\n   * @param {string} userId - ID of user to delete\r\n   */\n  const handleDeleteUser = async userId => {\n    // Prevent self-deletion\n    if (userId === currentUser.id) {\n      setError(\"You can't delete your own account!\");\n      return;\n    }\n\n    // Confirm deletion\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        await authService.deleteUser(userId);\n        loadUsers(); // Refresh user list after deletion\n        setError(null);\n      } catch (err) {\n        setError('Failed to delete user');\n        console.error('Delete user error:', err);\n      }\n    }\n  };\n\n  // Access control - only allow admin access\n  if (currentUser.role !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Access denied. Admin only.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: \"User Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateUser,\n          className: \"mb-6 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium\",\n              children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500 ml-1\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              value: newUser.email,\n              onChange: e => setNewUser({\n                ...newUser,\n                email: e.target.value\n              }),\n              required: true,\n              placeholder: \"user@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium\",\n              children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500 ml-1\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: newUser.password,\n              onChange: e => setNewUser({\n                ...newUser,\n                password: e.target.value\n              }),\n              required: true,\n              placeholder: \"Minimum 6 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium\",\n              children: [\"Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500 ml-1\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: newUser.name,\n              onChange: e => setNewUser({\n                ...newUser,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newUser.role,\n              onChange: e => setNewUser({\n                ...newUser,\n                role: e.target.value\n              }),\n              className: \"w-full rounded-md border p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"viewer\",\n                children: \"Viewer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Create User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"destructive\",\n          children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold\",\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), users.map(user => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-medium\",\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"Role: \", user.role]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"destructive\",\n                onClick: () => handleDeleteUser(user.id),\n                disabled: user.id === currentUser.id,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagement, \"Bza0oGs3suo4xCC4RA23lvKUdGg=\", false, function () {\n  return [useAuth];\n});\n_c = UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["useState","useEffect","useAuth","authService","Card","CardHeader","CardContent","Button","Input","Alert","AlertDescription","jsxDEV","_jsxDEV","UserManagement","_s","user","currentUser","users","setUsers","error","setError","newUser","setNewUser","email","password","name","role","loadUsers","getAllUsers","err","console","handleCreateUser","e","preventDefault","includes","length","createUser","handleDeleteUser","userId","id","window","confirm","deleteUser","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","required","placeholder","variant","map","onClick","disabled","_c","$RefreshReg$"],"sources":["A:/Projects/FrontEnd/React Apps/task-tracker/src/components/UserManagement.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/authContext';\r\nimport { authService } from '../services/authService';\r\nimport { Card, CardHeader, CardContent } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Alert, AlertDescription } from './ui/alert';\r\n\r\n/**\r\n * UserManagement Component\r\n * Provides interface for administrators to manage system users.\r\n * Includes functionality for creating, viewing, and deleting users.\r\n * Only accessible to users with admin role.\r\n */\r\nexport function UserManagement() {\r\n  // Get current user info from auth context for permission checking\r\n  const { user: currentUser } = useAuth();\r\n  \r\n  // State management\r\n  const [users, setUsers] = useState([]); // List of all users\r\n  const [error, setError] = useState(null); // Error message handling\r\n  \r\n  // Form state for new user creation\r\n  const [newUser, setNewUser] = useState({\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n    role: 'user' // Default role for new users\r\n  });\r\n\r\n  /**\r\n   * Load users when component mounts\r\n   * Uses useEffect to avoid multiple simultaneous data fetches\r\n   */\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetches current list of users from the server\r\n   * Updates users state or sets error message if fetch fails\r\n   */\r\n  const loadUsers = async () => {\r\n    try {\r\n      const users = await authService.getAllUsers();\r\n      setUsers(users);\r\n    } catch (err) {\r\n      setError('Failed to load users');\r\n      console.error('Load users error:', err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles new user creation form submission\r\n   * Validates input, creates user, and refreshes user list\r\n   * \r\n   * @param {Event} e - Form submission event\r\n   */\r\n  const handleCreateUser = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // Validate email format\r\n      if (!newUser.email.includes('@')) {\r\n        setError('Please enter a valid email address');\r\n        return;\r\n      }\r\n\r\n      // Validate password length\r\n      if (newUser.password.length < 6) {\r\n        setError('Password must be at least 6 characters long');\r\n        return;\r\n      }\r\n\r\n      // Create new user\r\n      await authService.createUser(newUser);\r\n      \r\n      // Reset form to initial state\r\n      setNewUser({ \r\n        email: '', \r\n        password: '', \r\n        name: '', \r\n        role: 'user' \r\n      });\r\n      \r\n      // Refresh user list\r\n      loadUsers();\r\n      \r\n      // Clear any existing errors\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to create user');\r\n      console.error('Create user error:', err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles user deletion\r\n   * Includes safety checks and confirmation\r\n   * \r\n   * @param {string} userId - ID of user to delete\r\n   */\r\n  const handleDeleteUser = async (userId) => {\r\n    // Prevent self-deletion\r\n    if (userId === currentUser.id) {\r\n      setError(\"You can't delete your own account!\");\r\n      return;\r\n    }\r\n\r\n    // Confirm deletion\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      try {\r\n        await authService.deleteUser(userId);\r\n        loadUsers(); // Refresh user list after deletion\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to delete user');\r\n        console.error('Delete user error:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Access control - only allow admin access\r\n  if (currentUser.role !== 'admin') {\r\n    return <div>Access denied. Admin only.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <Card>\r\n        <CardHeader>\r\n          <h2 className=\"text-2xl font-bold\">User Management</h2>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {/* User Creation Form */}\r\n          <form onSubmit={handleCreateUser} className=\"mb-6 space-y-4\">\r\n            {/* Email Input */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium\">\r\n                Email\r\n                <span className=\"text-red-500 ml-1\">*</span>\r\n              </label>\r\n              <Input\r\n                type=\"email\"\r\n                value={newUser.email}\r\n                onChange={(e) => setNewUser({...newUser, email: e.target.value})}\r\n                required\r\n                placeholder=\"user@example.com\"\r\n              />\r\n            </div>\r\n\r\n            {/* Password Input */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium\">\r\n                Password\r\n                <span className=\"text-red-500 ml-1\">*</span>\r\n              </label>\r\n              <Input\r\n                type=\"password\"\r\n                value={newUser.password}\r\n                onChange={(e) => setNewUser({...newUser, password: e.target.value})}\r\n                required\r\n                placeholder=\"Minimum 6 characters\"\r\n              />\r\n            </div>\r\n\r\n            {/* Name Input */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium\">\r\n                Name\r\n                <span className=\"text-red-500 ml-1\">*</span>\r\n              </label>\r\n              <Input\r\n                type=\"text\"\r\n                value={newUser.name}\r\n                onChange={(e) => setNewUser({...newUser, name: e.target.value})}\r\n                required\r\n                placeholder=\"Full Name\"\r\n              />\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium\">Role</label>\r\n              <select\r\n                value={newUser.role}\r\n                onChange={(e) => setNewUser({...newUser, role: e.target.value})}\r\n                className=\"w-full rounded-md border p-2\"\r\n              >\r\n                <option value=\"user\">User</option>\r\n                <option value=\"admin\">Admin</option>\r\n                <option value=\"viewer\">Viewer</option>\r\n              </select>\r\n            </div>\r\n\r\n            <Button type=\"submit\">Create User</Button>\r\n          </form>\r\n\r\n          {/* Error Display */}\r\n          {error && (\r\n            <Alert variant=\"destructive\">\r\n              <AlertDescription>{error}</AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {/* User List Section */}\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-xl font-semibold\">Users</h3>\r\n            {/* Map through users and display them */}\r\n            {users.map(user => (\r\n              <Card key={user.id} className=\"p-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <div>\r\n                    <p className=\"font-medium\">{user.name}</p>\r\n                    <p className=\"text-sm text-gray-600\">{user.email}</p>\r\n                    <p className=\"text-sm text-gray-600\">Role: {user.role}</p>\r\n                  </div>\r\n                  {/* Delete Button - disabled for current user */}\r\n                  <Button \r\n                    variant=\"destructive\"\r\n                    onClick={() => handleDeleteUser(user.id)}\r\n                    disabled={user.id === currentUser.id}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}