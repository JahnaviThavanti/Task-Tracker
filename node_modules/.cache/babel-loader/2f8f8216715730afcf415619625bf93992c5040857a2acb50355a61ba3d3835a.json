{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\FrontEnd\\\\React Apps\\\\task-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { AuthProvider, useAuth } from './contexts/authContext';\nimport { useState } from 'react';\nimport { UserManagement } from './components/UserManagement';\nimport { Login } from './components/Login';\nimport { TaskList } from './components/TaskList';\nimport { Button } from './components/ui/button';\n\n/**\n * AuthenticatedApp component handles the main application interface after user login.\n * Manages view switching between tasks and user management (for admins).\n * \n * Features:\n * - Conditional rendering based on user role\n * - View state management for navigation\n * - Welcome message with user info\n * - Role-based access control for admin features\n * \n * @component\n * @returns {JSX.Element} The authenticated application interface\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticatedApp() {\n  _s();\n  // Get user data and logout function from auth context\n  const {\n    user,\n    logout\n  } = useAuth();\n\n  // State to manage current view (tasks or user management)\n  const [currentView, setCurrentView] = useState('tasks');\n\n  // If no user is logged in, show the Login component\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: [\"Welcome, \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-sm text-gray-600\",\n          children: [\"(\", user.role, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-x-4\",\n        children: [user.role === 'admin' && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentView(currentView === 'users' ? 'tasks' : 'users')\n          // Change button text based on current view\n          ,\n          \"aria-label\": currentView === 'users' ? 'Switch to tasks view' : 'Switch to user management',\n          children: currentView === 'users' ? 'View Tasks' : 'Manage Users'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: logout,\n          variant: \"outline\",\n          \"aria-label\": \"Logout\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), user.role === 'admin' && currentView === 'users' ? /*#__PURE__*/_jsxDEV(UserManagement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Component responsibilities:\n * 1. User interface management\n *    - Displays user information\n *    - Provides navigation between views\n *    - Handles logout functionality\n * \n * 2. Access control\n *    - Restricts admin features to admin users\n *    - Controls view access based on user role\n * \n * 3. State management\n *    - Manages current view state\n *    - Handles view transitions\n * \n * 4. User experience\n *    - Provides clear navigation\n *    - Shows relevant user information\n *    - Maintains consistent layout\n * \n * Potential improvements:\n * 1. Add loading states during view transitions\n * 2. Implement view transition animations\n * 3. Add breadcrumb navigation\n * 4. Include user preferences storage\n * 5. Add keyboard navigation shortcuts\n * 6. Implement search functionality\n * 7. Add view-specific toolbars\n * 8. Include error boundaries for each view\n */\n\n/**\n * Main App component serves as the application root.\n * Wraps the entire application with necessary providers and context.\n * \n * Features:\n * - Authentication provider wrapping\n * - Global app layout\n * - Error boundary potential\n * \n * @component\n * @returns {JSX.Element} The rendered application\n */\n_s(AuthenticatedApp, \"LVMgC1cp2Escvlcg9JvdTxeCEe4=\", false, function () {\n  return [useAuth];\n});\n_c = AuthenticatedApp;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(AuthenticatedApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Potential future enhancements:\n * \n * 1. Error Boundary implementation\n *    - Catch and handle runtime errors\n *    - Display user-friendly error messages\n *    - Error reporting to monitoring service\n * \n * 2. Loading states\n *    - Initial app loading indicator\n *    - Authentication state loading\n *    - Route transition animations\n * \n * 3. Theme provider\n *    - Dark/light mode toggle\n *    - Custom theme settings\n *    - User theme preferences\n * \n * 4. Global notifications\n *    - Toast messages for actions\n *    - System notifications\n *    - Status updates\n * \n * 5. Responsive design improvements\n *    - Mobile-first layouts\n *    - Breakpoint-specific rendering\n *    - Touch interactions\n * \n * 6. Performance optimizations\n *    - Code splitting\n *    - Lazy loading components\n *    - Memoization of expensive operations\n * \n * 7. Analytics integration\n *    - User behavior tracking\n *    - Performance monitoring\n *    - Error tracking\n * \n * 8. Accessibility improvements\n *    - Keyboard navigation\n *    - Screen reader optimization\n *    - ARIA labels and roles\n */\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthenticatedApp\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["AuthProvider","useAuth","useState","UserManagement","Login","TaskList","Button","jsxDEV","_jsxDEV","AuthenticatedApp","_s","user","logout","currentView","setCurrentView","fileName","_jsxFileName","lineNumber","columnNumber","children","className","name","role","onClick","variant","_c","App","_c2","$RefreshReg$"],"sources":["A:/Projects/FrontEnd/React Apps/task-tracker/src/App.js"],"sourcesContent":["import { AuthProvider, useAuth } from './contexts/authContext';\nimport { useState } from 'react';\nimport { UserManagement } from './components/UserManagement';\nimport { Login } from './components/Login';\nimport { TaskList } from './components/TaskList';\nimport { Button } from './components/ui/button';\n\n/**\n * AuthenticatedApp component handles the main application interface after user login.\n * Manages view switching between tasks and user management (for admins).\n * \n * Features:\n * - Conditional rendering based on user role\n * - View state management for navigation\n * - Welcome message with user info\n * - Role-based access control for admin features\n * \n * @component\n * @returns {JSX.Element} The authenticated application interface\n */\nfunction AuthenticatedApp() {\n  // Get user data and logout function from auth context\n  const { user, logout } = useAuth();\n  \n  // State to manage current view (tasks or user management)\n  const [currentView, setCurrentView] = useState('tasks');\n\n   // If no user is logged in, show the Login component\n   if (!user) {\n    return <Login />;\n  }\n\n  return (\n    <div>\n      {/* Header bar with user info and navigation */}\n      <div className=\"flex justify-between items-center p-4 bg-gray-100\">\n        {/* User information display */}\n        <div>\n          <span className=\"font-medium\">Welcome, {user.name}</span>\n          <span className=\"ml-2 text-sm text-gray-600\">({user.role})</span>\n        </div>\n\n        {/* Navigation and action buttons */}\n        <div className=\"space-x-4\">\n          {/* Conditional render of admin navigation */}\n          {user.role === 'admin' && (\n            <Button \n              onClick={() => setCurrentView(currentView === 'users' ? 'tasks' : 'users')}\n              // Change button text based on current view\n              aria-label={currentView === 'users' ? 'Switch to tasks view' : 'Switch to user management'}\n            >\n              {currentView === 'users' ? 'View Tasks' : 'Manage Users'}\n            </Button>\n          )}\n          \n          {/* Logout button */}\n          <Button \n            onClick={logout} \n            variant=\"outline\"\n            aria-label=\"Logout\"\n          >\n            Logout\n          </Button>\n        </div>\n      </div>\n\n      {/* Main content area with conditional rendering */}\n      {/* Show UserManagement for admins when in users view, otherwise show TaskList */}\n      {user.role === 'admin' && currentView === 'users' ? (\n        <UserManagement />\n      ) : (\n        <TaskList />\n      )}\n    </div>\n  );\n}\n\n/**\n * Component responsibilities:\n * 1. User interface management\n *    - Displays user information\n *    - Provides navigation between views\n *    - Handles logout functionality\n * \n * 2. Access control\n *    - Restricts admin features to admin users\n *    - Controls view access based on user role\n * \n * 3. State management\n *    - Manages current view state\n *    - Handles view transitions\n * \n * 4. User experience\n *    - Provides clear navigation\n *    - Shows relevant user information\n *    - Maintains consistent layout\n * \n * Potential improvements:\n * 1. Add loading states during view transitions\n * 2. Implement view transition animations\n * 3. Add breadcrumb navigation\n * 4. Include user preferences storage\n * 5. Add keyboard navigation shortcuts\n * 6. Implement search functionality\n * 7. Add view-specific toolbars\n * 8. Include error boundaries for each view\n */\n\n/**\n * Main App component serves as the application root.\n * Wraps the entire application with necessary providers and context.\n * \n * Features:\n * - Authentication provider wrapping\n * - Global app layout\n * - Error boundary potential\n * \n * @component\n * @returns {JSX.Element} The rendered application\n */\nexport default function App() {\n  return (\n    <AuthProvider>\n      <div className=\"app min-h-screen bg-gray-50\">\n        <AuthenticatedApp />\n      </div>\n    </AuthProvider>\n  );\n}\n\n/**\n * Potential future enhancements:\n * \n * 1. Error Boundary implementation\n *    - Catch and handle runtime errors\n *    - Display user-friendly error messages\n *    - Error reporting to monitoring service\n * \n * 2. Loading states\n *    - Initial app loading indicator\n *    - Authentication state loading\n *    - Route transition animations\n * \n * 3. Theme provider\n *    - Dark/light mode toggle\n *    - Custom theme settings\n *    - User theme preferences\n * \n * 4. Global notifications\n *    - Toast messages for actions\n *    - System notifications\n *    - Status updates\n * \n * 5. Responsive design improvements\n *    - Mobile-first layouts\n *    - Breakpoint-specific rendering\n *    - Touch interactions\n * \n * 6. Performance optimizations\n *    - Code splitting\n *    - Lazy loading components\n *    - Memoization of expensive operations\n * \n * 7. Analytics integration\n *    - User behavior tracking\n *    - Performance monitoring\n *    - Error tracking\n * \n * 8. Accessibility improvements\n *    - Keyboard navigation\n *    - Screen reader optimization\n *    - ARIA labels and roles\n */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}