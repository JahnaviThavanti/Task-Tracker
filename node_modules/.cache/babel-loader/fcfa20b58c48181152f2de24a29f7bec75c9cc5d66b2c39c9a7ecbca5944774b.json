{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nexport const authService = {\n  async login(email, password) {\n    try {\n      const response = await fetch(`${BASE_URL}/users?email=${email}`);\n      const users = await response.json();\n      const user = users[0];\n      if (user && user.password === password) {\n        // Remove password before storing/returning user data\n        const {\n          password: _,\n          ...safeUser\n        } = user;\n        return safeUser;\n      }\n      throw new Error('Invalid credentials');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  async getCurrentUser() {\n    try {\n      const userJson = localStorage.getItem('user');\n      if (!userJson) return null;\n      const user = JSON.parse(userJson);\n      const response = await fetch(`${BASE_URL}/users/${user.id}`);\n      if (!response.ok) {\n        localStorage.removeItem('user');\n        return null;\n      }\n      const currentUser = await response.json();\n      const {\n        password: _,\n        ...safeUser\n      } = currentUser;\n      return safeUser;\n    } catch (error) {\n      console.error('Get current user error:', error);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","authService","login","email","password","response","fetch","users","json","user","_","safeUser","Error","error","console","getCurrentUser","userJson","localStorage","getItem","JSON","parse","id","ok","removeItem","currentUser"],"sources":["A:/Projects/FrontEnd/React Apps/task-tracker/src/services/authService.js"],"sourcesContent":["const BASE_URL = 'http://localhost:3001';\r\n\r\nexport const authService = {\r\n  async login(email, password) {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/users?email=${email}`);\r\n      const users = await response.json();\r\n      \r\n      const user = users[0];\r\n      if (user && user.password === password) {\r\n        // Remove password before storing/returning user data\r\n        const { password: _, ...safeUser } = user;\r\n        return safeUser;\r\n      }\r\n      throw new Error('Invalid credentials');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async getCurrentUser() {\r\n    try {\r\n      const userJson = localStorage.getItem('user');\r\n      if (!userJson) return null;\r\n      \r\n      const user = JSON.parse(userJson);\r\n      const response = await fetch(`${BASE_URL}/users/${user.id}`);\r\n      if (!response.ok) {\r\n        localStorage.removeItem('user');\r\n        return null;\r\n      }\r\n      const currentUser = await response.json();\r\n      const { password: _, ...safeUser } = currentUser;\r\n      return safeUser;\r\n    } catch (error) {\r\n      console.error('Get current user error:', error);\r\n      return null;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,gBAAgBG,KAAK,EAAE,CAAC;MAChE,MAAMI,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEnC,MAAMC,IAAI,GAAGF,KAAK,CAAC,CAAC,CAAC;MACrB,IAAIE,IAAI,IAAIA,IAAI,CAACL,QAAQ,KAAKA,QAAQ,EAAE;QACtC;QACA,MAAM;UAAEA,QAAQ,EAAEM,CAAC;UAAE,GAAGC;QAAS,CAAC,GAAGF,IAAI;QACzC,OAAOE,QAAQ;MACjB;MACA,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7C,IAAI,CAACF,QAAQ,EAAE,OAAO,IAAI;MAE1B,MAAMP,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;MACjC,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,UAAUS,IAAI,CAACY,EAAE,EAAE,CAAC;MAC5D,IAAI,CAAChB,QAAQ,CAACiB,EAAE,EAAE;QAChBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;QAC/B,OAAO,IAAI;MACb;MACA,MAAMC,WAAW,GAAG,MAAMnB,QAAQ,CAACG,IAAI,CAAC,CAAC;MACzC,MAAM;QAAEJ,QAAQ,EAAEM,CAAC;QAAE,GAAGC;MAAS,CAAC,GAAGa,WAAW;MAChD,OAAOb,QAAQ;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}